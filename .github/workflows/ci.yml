name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest

  bump_version:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Set Git user information
        run: |
          git config --local user.name "Versioning"
          git config --local user.email "alexv.banciu@gmail.com"

      - name: Determine version bump
        id: version_bump
        run: |
          if git log -1 --pretty=%B | grep -q '#major'; then
            echo "::set-output name=version::major"
          elif git log -1 --pretty=%B | grep -q '#minor'; then
            echo "::set-output name=version::minor"
          else
            echo "::set-output name=version::patch"
          fi

      - name: Tag the version
        run: |
          VERSION=$(bump2version --dry-run --list ${{ steps.version_bump.outputs.version }} | grep new_version= | sed 's/new_version=//')
          git tag -a "v$VERSION" -m "Version $VERSION"
          git push origin --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
