name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest

  bump_version:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install bump2version
        run: |
          pip install bump2version

      - name: Set Git user information
        run: |
          git config --local user.name "Versioning"
          git config --local user.email "alexv.banciu@gmail.com"

      - name: Check for /#major keyword
        id: check_major
        run: |
          if git log -1 --pretty=%B | grep -q '#major'; then
            echo "version=major" >> $GITHUB_OUTPUT
          fi

      - name: Check for /#minor keyword
        id: check_minor
        if: steps.check_major.outputs.version == ''
        run: |
          if git log -1 --pretty=%B | grep -q '#minor'; then
            echo "version=minor" >> $GITHUB_OUTPUT
          fi

      - name: Set default patch version
        id: default_patch
        if: steps.check_minor.outputs.version == ''
        run: |
          echo "version=patch" >> $GITHUB_OUTPUT

      - name: Determine current version
        id: current_version
        run: |
          CURRENT_VERSION=$(git describe --tags --abbrev=0 || echo "0.0.0")
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

      - name: Tag the version
        run: |
          bump2version ${{ steps.default_patch.outputs.version || steps.check_minor.outputs.version || steps.check_major.outputs.version }} --current-version ${{ env.CURRENT_VERSION }} --allow-dirty
          git push origin --tags
